"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("request");
let requestOptions;
function init(config) {
    if (!config.url) {
        throw new Error("url must be specified");
    }
    if (!config.key && !(config.oauth_clientId && config.oauth_secret)) {
        throw new Error("key or oauth_clientId + oauth_secret must be specified");
    }
    requestOptions = {
        headers: {
            Accept: "application/json"
        },
        json: true,
        strictSSL: true,
        url: config.url + "/do/WS/NetoAPI"
    };
    if (config.key) {
        requestOptions.headers.NETOAPI_KEY = config.key;
    }
    if (config.oauth_clientId) {
        requestOptions.headers.X_ACCESS_KEY = config.oauth_clientId;
    }
    if (config.oauth_secret) {
        requestOptions.headers.X_SECRET_KEY = config.oauth_secret;
    }
    if (config.user) {
        requestOptions.headers.NETOAPI_USERNAME = config.user;
    }
}
exports.init = init;
function postApi({ action, body }) {
    let options = Object.assign(Object.assign({}, requestOptions), { headers: Object.assign(Object.assign({}, requestOptions.headers), { NETOAPI_ACTION: action }), body: body });
    return new Promise((resolve, reject) => {
        request_1.post(options, (error, response, responseBody) => {
            // Catch any errors
            if (error) {
                return reject(error);
            }
            if (responseBody.Ack !== "Success") {
                return reject(responseBody.Messages);
            }
            resolve(responseBody);
        });
    });
}
exports.postApi = postApi;
